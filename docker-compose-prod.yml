version: '3'

services:
  admin:
    build:
      context: ./admin
      dockerfile: Dockerfile
    volumes:
      - ./admin/:/admin/
      - /var/run/docker.sock:/var/run/docker.sock
    command: gunicorn admin.wsgi:application --reload -w 2 -b 0.0.0.0:8010
    env_file:
      - .env

    ports:
      - 8010:8010
    restart: "on-failure"

    depends_on:
      - db
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.admin.rule=Host(`portal.bgbot.app`)"
      - "traefik.http.routers.admin.tls=true"
      - "traefik.http.routers.admin.tls.certresolver=le"


  traefik:
    # Use the latest v2.7.x Traefik image available
    image: traefik:v2.7
    ports:
      # Listen on port 80, default for HTTP, necessary to redirect to HTTPS
      - 80:80
      # Listen on port 443, default for HTTPS
      - 443:443
    restart: always
    labels:
      # Enable Traefik for this service, to make it available in the public network
      - "traefik.enable=true"
    volumes:
      # Add Docker as a mounted volume, so that Traefik can read the labels of other services
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Mount the volume to store the certificates
      - traefik-public-certificates:/certificates
    command:
      # Enable Docker in Traefik, so that it reads labels from Docker services
      - --providers.docker
      # Do not expose all Docker services, only the ones explicitly exposed
      - --providers.docker.exposedbydefault=false
      # Create the certificate resolver "le" for Let's Encrypt, uses the environment variable EMAIL
      - --certificatesresolvers.le.acme.email=etimunyime@webmack.org
      # Store the Let's Encrypt certificates in the mounted volume
      - --certificatesresolvers.le.acme.storage=/certificates/acme.json
      # Use the TLS Challenge for Let's Encrypt
      - --certificatesresolvers.le.acme.tlschallenge=true
      # Enable the access log, with HTTP requests
      - --accesslog
      # Enable the Traefik log, for configurations and errors
      - --log
      # Redirect HTTP to HTTPS
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"


  db:
      image: postgres:12.1-alpine
      volumes:
        - postgres_data:/var/lib/postgresql/data/
      env_file:
        - .env
      ports:
        - 5434:5434
      environment:
        - POSTGRES_DB=bomach2
        - POSTGRES_user= bomach_user
        - POSTGRES_PASSWORD= odoo
      restart: "on-failure"


  redis:
    image: "redis:latest"
    expose:
      - 6379
    working_dir: /data
    volumes:
      - redis_data:/data
    restart: "on-failure"

volumes:
  postgres_data:
  redis_data:
  traefik-public-certificates:

