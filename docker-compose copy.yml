version: '3'

services:
  admin:
    build:
      context: ./admin
      dockerfile: Dockerfile
    volumes:
      - ./admin/:/admin/
      - /var/run/docker.sock:/var/run/docker.sock
    command: gunicorn admin.wsgi:application --reload -w 2 -b 0.0.0.0:8010
    
    env_file:
      - .env

    ports:
      - 8010:8010
    restart: "always"

    depends_on:
      - db
      - redis

  customer_app:
    build:
      context: ./customer_app
      dockerfile: Dockerfile
    volumes:
      - ./customer_app/:/customer_app/
      - /var/run/docker.sock:/var/run/docker.sock
    command: gunicorn customer_app.wsgi:application --reload -w 2 -b 0.0.0.0:8011
    env_file:
      - .env

    ports:
      - 8011:8011
    restart: "always"
    depends_on:
      - db
      - redis

  staff_app:
    build:
      context: ./staff_app
      dockerfile: Dockerfile
    volumes:
      - ./staff_app/:/staff_app/
      - /var/run/docker.sock:/var/run/docker.sock
    command: gunicorn staff_app.wsgi:application --reload -w 2 -b 0.0.0.0:8012
    
    env_file:
      - .env
    ports:
      - 8012:8012
    restart: "always"
    depends_on:
      - db
      - redis

  db:
      image: postgres:12.1-alpine
      volumes:
        - postgres_data:/var/lib/postgresql/data/
      env_file:
        - .env
      ports:
        - 5434:5434
      environment:
        - POSTGRES_DB=bomach2
        - POSTGRES_user= bomach_user
        - POSTGRES_PASSWORD= odoo
      restart: "always"
    
  redis:
    image: "redis:latest"
   
    expose:
      - 6379
    working_dir: /data
    volumes:
      - redis_data:/data
    restart: "always"

  celery:
    build: 
      context: ./admin
      dockerfile: Dockerfile
    command: celery -A admin worker -l INFO
    volumes:
      - ./admin:/admin

    environment:
        - POSTGRES_DB=bomach2
        - POSTGRES_user= bomach_user
        - POSTGRES_PASSWORD= odoo

    depends_on:
      - db
      - redis
      - admin
    restart: always

volumes:
  postgres_data:
  redis_data:

